plugins {
    id 'com.android.library'
    id 'com.github.dcendents.android-maven'
    id 'com.jfrog.bintray'
}
group='com.w3engineers'

android {

    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName '1.2.0'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

//apply from: 'https://raw.githubusercontent.com/mimosaha/maven-upload/master/bintray.gradle'
//apply from: 'https://raw.githubusercontent.com/mimosaha/maven-upload/master/publications.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'com.android.support:design:28.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    implementation 'com.google.zxing:core:3.3.3'

    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"

    implementation 'com.github.w3-engineers:strom:0.0.14'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'
//    api deps.strom_remote
}

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                description project.getProperty("libraryDescription")
                name project.getProperty("libraryName")
                url project.getProperty("siteUrl")
                // Set your license
                licenses {
                    license {
                        name project.getProperty("licenseName")
                        url project.getProperty("licenseUrl")
                    }
                }
                developers {
                    developer { //  可默认，开发者信息
                        id project.getProperty("bintray.user")
                        name project.getProperty("developerName")
                        email project.getProperty("developerEmail")
                    }
                }
                scm {
                    connection project.getProperty("gitUrl")
                    developerConnection project.getProperty("gitUrl")
                    url project.getProperty("siteUrl")
                }
            }
        }
    }
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
}

task androidJavadocsJar(type: Jar) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}
task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar

}

Properties properties = new Properties()
// 加载本地配置
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = 'mimosaha'
    key = '511bddb03987d20597713855bd9ad385bcaa97e5'
    configurations = ['archives']
    pkg {
        repo = 'app-share'  //发布到Bintray的那个仓库里，默认账户有四个库，我们这里上传到maven库
        name = 'app-share' //需更改，这个名字就是你在Bintray上创建Package的名字，这里会查询，如果此包不存在就会创建一个。
        //组织名称 organization
        websiteUrl = 'https://github.com/mimosaha/app-share'
        vcsUrl = 'https://github.com/mimosaha/app-share.git'

        version {
            name = '1.2.0'
            vcsTag = '1.2.0'
        }

        licenses = ["Apache-2.0"]
        publish = true
    }
}

//ext {
//    bintrayRepo = project.getProperty("bintrayRepo")
//    bintrayName = project.getProperty("bintrayName")   // Replace by your library name, has to be same as your library module name
//
//    publishedGroupId = 'com.github.mimosaha'
//    libraryName = 'app-share'  //  Replace by your library name, has to be same as your library module name
//    artifact = 'app-share'     // Replace by your library name, has to be same as your library module name
//
//    libraryDescription = 'This is description about this library'
//
//    // Your github repo link
//    siteUrl = 'https://github.com/mimosaha/app-share' // Replace by your url
//    gitUrl = 'https://github.com/mimosaha/app-share.git' // Replace by your url
//    githubRepository= 'mimosaha/app-share' // Replace by your url
//
//    libraryVersion = '1.0.0' // Increase whenever you update library version
//
//    developerId = 'mimosaha' // Replace by your name
//    developerName = 'MimoSaha' // Replace by your name
//    developerEmail = 'mimosaha@w3engineers.com' // Replace by your email
//
//    licenseName = 'The Apache Software License, Version 2.0'
//    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
//    allLicenses = ["Apache-2.0"]
//}

//bintray {
//    user = project.getProperty("bintray.user")
//    key = project.getProperty("bintray.apikey")
//    pkg {
//        repo = project.getProperty("bintrayRepo")
//        name = project.getProperty("bintrayName")
//        licenses = project.getProperty("licenseName")
//        vcsUrl = project.getProperty("siteUrl")
//        version {
//            name = project.getProperty("libraryVersion")
//        }
//    }
//    filesSpec {
//        from 'sdk/build/outputs/aar/sdk-release.aar'
//        into '.'
//    }
//}
plugins {
    id 'com.android.library'
    id 'com.github.dcendents.android-maven'
    id 'com.jfrog.bintray'
}
group='com.w3engineers'

android {

    compileSdkVersion 28

    group='com.w3engineers.appshare'
    version "1.3.4"

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName '1.3.4'

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "appshare"
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    /*dataBinding {
        enabled = true
    }*/
}

//apply from: 'https://raw.githubusercontent.com/mimosaha/maven-upload/master/bintray.gradle'
//apply from: 'https://raw.githubusercontent.com/mimosaha/maven-upload/master/publications.gradle'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    implementation 'com.android.support:design:28.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'

    implementation 'com.google.zxing:core:3.3.3'

    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.lifecycle:viewmodel:1.1.1"

//    implementation 'com.github.w3-engineers:strom:0.0.14'
    implementation 'pl.droidsonroids.gif:android-gif-drawable:1.2.17'
//    api deps.strom_remote
}

def artifact = new Properties()
//artifact.load(new FileInputStream("deploy.settings"))

//version= "1.2.5"
//group="app-share"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'

//                groupId "com.w3engineers.appshare"
//                artifactId "appshare"
                version "1.3.4"
                name "appshare" // pom.project.name must be same as bintray.pkg.name
                url "https://github.com/mimosaha/app-share"

                licenses {
                    license {
                        name project.getProperty("licenseName")
                        url project.getProperty("licenseUrl")
                        distribution 'repo'
                    }
                }
                developers {
                    developer { //  可默认，开发者信息
                        id project.getProperty("bintray.user")
                        name project.getProperty("developerName")
                        email project.getProperty("developerEmail")
                    }
                }
                scm {

                    connection "https://github.com/mimosaha/app-share.git"
                    developerConnection "https://github.com/mimosaha/app-share.git"
                    url "https://github.com/mimosaha/app-share"

//                    connection project.getProperty("gitUrl")
//                    developerConnection project.getProperty("gitUrl")
//                    url project.getProperty("siteUrl")
                }
            }
        }
    }
}

Properties properties = new Properties()
File propFile = "${System.properties['user.home']}${File.separator}.gradle${File.separator}bintray.properties" as File
properties.load(propFile.newDataInputStream())

bintray {

    user = "mimosaha"
    key = "511bddb03987d20597713855bd9ad385bcaa97e5"

    configurations = ['archives']
    pkg {
        repo = "app-share"
        name = "appshare"
        websiteUrl = "https://github.com/mimosaha/app-share"
        vcsUrl = "https://github.com/mimosaha/app-share.git"

        version {
            name = "1.3.4"
        }

        licenses = ["Apache-2.0"]
        publish = true

    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
    // options.encoding = 'UTF-8'
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
